########################################################################
#                                                                      #
#        QEDPS version 1.0(01)               12  Feb. 1997    KEK      #
#                                                                      #
########################################################################

Authors:    T. Munehisa(*), Y. Kurihara, J. Fujimoto and Y. Shimizu

            KEK, Oho, Tsukuba, Ibaraki 305, Japan.
        (*) Yamanashi University, Takeda, Kofu, Yamanashi 400, Japan.
   
========================================================================
                          General Remarks
========================================================================

                           Contact 
                           -------

  If you have a question or want to get news on this program, please 
  send an e-mail to   kurihara@minami.kek.jp.

                           Abstract 
                           ---------

  Being combined with the cross section of a hard process induced by
  e+e- annihilation, this program provides the radiative corrections 
  by generating initial state radiation(ISR) of arbitrary number of 
  photons according to the leading-log parton shower algorithm. 

  The 4-momemta of the particles involved in the cascade process,
  emitted photon and e-/e+, are recorded in a list. Hence the total 
  momentum of e- and e+ at the moment of the annihilation is given 
  as the output, from which the cross section of the hard process is 
  calculated. The bare cross section and the corrected ones by QEDPS 
  and that by the electron structure function up to O(\alpha**2) are 
  the final output. Comparing the last two one can check if QEDPS 
  works correctly or not. 
  
  The user must keep in mind the following points in applying QEDPS 
  to one's hard process interested.

  (1) A photon is generated with a transverse momentum with respect to
      the original beam axis. Hence the e-/e+ which annihilate after
      emission of photons do not necessarily make a head-on collision.
      If users want to apply cuts on the final state particles in LAB-frame,
      which is CM-frame of incident beams before photon emission, 
      users must boost them to the LAB-frame. The routine (QPSET) is 
      prepared for this purpose.

  (2) When the hard process contains e- and/or e+ surviving in the final
      state, namely when the process is not an annihilation, the present
      algorithm is not applicable. One dares to apply, the result would 
      be not reliable though.

  (3) QEDPS V1.0 is restricted to only initial state radiation for e+e-
      annihilation. We have a plan to extend it to final state radiation,
      Bhabha and two-photon type processes, NLL order approximation etc.

  The details of the algorithm will be found in the file qedps.ps
  (postscript file of ref.(3)).


                           Reference 
                           ---------
  
(1) J. Fujimoto, Y. Shimizu and T. Munehisa
   'Monte Carlo Approach to Radiative Processes in e+e-
    Annihilation'
    Progress of Theoretical Physics, Vol.90 (1993) 177,

(2) T. Munehisa, J. Fujimoto, Y. Kurihara and Y. Shimizu,
   'Improved QEDPS for Radiative Corrections in e+e- Annihilation',
    Progress of Theoretical Physics, Vol.95 (1996) 375,

(3) Y. Kurihara, J. Fujimoto, T. Munehisa and Y. Shimizu,
   'Hard Photon Distributions in e+e- Annihilation Processes by QEDPS',
    Progress of Theoretical Physics, Vol.96 (1996) 1223,

    and references cited therein.


========================================================================
                         Program description
========================================================================
  
                      Files of QEDPS 1.0 System 
                      --------------------------

(a) documents

  +--- README    ................ this file
  |
  +--- doc.tex    ............... on the algorithm
 
(b) programs
   
  +--- Makefile    .............. Makefile
  |
  +--- QEDPS.f   ................ QEDPS subroutines
  |
  +--- qpincl.f   ............... common variables
  |
  +--- main1.f    ................ sample program  
  |        (Total cross section of the process 'e+e- --> Z Higgs')
  +--- main2.f    ................ sample program  
           (Differential cross section of 'e+e- --> Z Higgs')

  
                         How to install 
                         ---------------
   
Following the steps one by one

  0. edit Makefile and select appropriate Fortran compiler for your machine.

  1. make clean

  2. make install

  ---------------------------------------------
  TEST RUN
  ---------------------------------------------

  3. make

  4. qedps1

  5. qedps2

you will get the total cross section of 'e+e- --> z Higgs' at 500 GeV 
by this test run.

 
                         How to use QEDPS 
                         -----------------

The user should prepare the main routine, which must call two routines,
QPINIT for initialization and QPGEN for generation. Also the cross
section for the hard process should be prepared in this main program.
All real variables are assumed to be real*8.


The basic structure of the main program looks like:

         Program main
         IMPLICIT REAL*8(A-H,O-Z)
         COMMON/QPLIST/PLPTN(10,1000),NLPTN(10,1000),NPTCL

         ..........................
         ..........................

             cross section for the hard process to be dressed
             by radiation.
  
         ..........................
         ..........................
	

* Initialization
* Q-square maximum 
        q2max=500.d0**2 <----- CM energy squared of the initial beams
* Mass of incident particles
        ainmas=amel     <-----  electron mass
* Random number seed (if negative, the default value is assumed)
        iseed=-999

        CALL QPINIT(q2max,ainmas,iseed)

 
  
now the event loop starts:

        DO 1 I=1,NEVEN
* QEDPS -----------------------------------------------------------
* Q2IN : (CM enegy)**2 before radiative photon emission.
* Q2OUT: (CM enegy)**2 after  radiative photon emission.
* Q2IN is NOT constant for future linear colliders due to beamstrahlung.
          q2in=q2max
          CALL QPGEN(q2in, q2out)
          if(q2out.lt.q2min) goto 1
         ..............
         ..............
* set 4-momentum in CM-system after phton emission ***********************
* particle 1
          ID1 = {Particle ID of 1st particle}
          e1  = {Energy      of 1st particle}
          px_1= {Px          of 1st particle}
          py_1= {Py          of 1st particle}
          pz_1= {Pz          of 1st particle}

* IFRAG = 0 : first call of QPSET
          IFRAG = 0

* set necessary information in 'COMMON/QPLIST/'
          CALL QPSET(ID1,e1,px_1,py_1,pz_1,IFLAG)

* particle 2
          ID2 = {Particle ID of 2nd particle}
          e2  = {Energy      of 2nd particle}
          px_2= {Px          of 2nd particle}
          py_2= {Py          of 2nd particle}
          pz_2= {Pz          of 2nd particle}

* IFRAG = 999 : 
          IFRAG = 999

* set necessary information in 'COMMON/QPLIST/'
          CALL QPSET(ID2,e2,px_2,py_2,pz_2,IFLAG)
         ..............
         ..............
* particle n'th
          IDn = {Particle ID of n'th particle}
          en  = {Energy      of n'th particle}
          px_n= {Px          of n'th particle}
          py_n= {Py          of n'th particle}
          pz_n= {Pz          of n'th particle}

* IFRAG = 1 : last call of QPSET
          IFRAG = 1

* set necessary information in 'COMMON/QPLIST/'
          CALL QPSET(IDn,en,px_n,py_n,pz_n,IFLAG)
         ..............
         ..............
1       CONTINUE

         ...............
         ...............
         ...............

         STOP
         END


The input value q2in can be taken from some distribution, e.g. for the 
future linear colliders. QPGEN returns q2out after the radiation,
which varies from 0 to q2max. When q2out is less than the threshold 
of the given process, users should discard that event. 
  
Four momenta and the information of all particles which participate 
the shower process, namely real and virtual electrons(positrons) 
and real photons, are stored in 'COMMON/QPLIST/' whose components
are:

*         NPTCL     :  Number of particles
*         PLPTN(1, ):  The lightcone fraction
*         PLPTN(2, ):  virtual mass squared
*         PLPTN(3, ):  Pt**2
*         PLPTN(4, ):  x-component of the four momentum
*         PLPTN(5, ):  y-component of the four momentum
*         PLPTN(6, ):  z-component of the four momentum
*         PLPTN(7, ):  E-component of the four momentum
*         PLPTN(8, ):  + component of the lightcone momentum
*         PLPTN(9, ):  - component of the lightcone momentum
*
*         NLPTN(1, ): particle ID
*                      electron:11, positron:-11
*                      photon :22
*                    (PDG standard)
*         NLPTN(2, ): relative address of the parent
*         NLPTN(3, ): number of the children
*         NLPTN(4, ): relative address of the first child
*         NLPTN(5, ): status of the process
*         NLPTN(6, ): spacelike(-1) or timelike(+1)

	We prepare 'QPSET' for boost 4-momentum of final particles
from CM-system after photon emission to CM-system of incident beams.

           CALL QPSET(ID,ICHARG,e,px,py,pz,IFRAG)

  ID 		:particle ID number (PDG standard)
  CHARGE        :charge of the particle
  e,px,py,pz    :four momentum of the particle
  IFRAG=0       :first call
       =1       :last call
       =999     :otherwise
                                           
For n-body final state, users should call this routine n-times,
first with IFARG=0, from second to (n-1)'th with IFRAG=999 and
last (n'th time) with IFRAG=1. When QPSET is called with IFRAG=1, all
four momenta set by QPSET are boosted to CM-system of incident beams.

   
                      Structure of QEDPS 
                      ------------------

	main
	   |
	   |------ QPINIT
	   |          |
	   |          +------ QPPREP
   /--->---+
   |       |
   |	   +------ QPGEN
   ^       |          |
   |	   |          |------ QPSINT
   |	   |          |          |
   |	   |          |          |------ QPCORR
   |	   |          |          |          |
 ( event loop )       |          |          |------ QPFINT
   |	   |          |          |          +------ QPRAND
   ^	   |          |          |           
   |	   |          |          |------ QPGEN1
   |	   |          |          |          |
   |	   |          |          |          +------ QPRAND
   |	   |          |          |           
   |	   |          |          +------ QPCMSN
   |	   |          |                     |
   ^	   |          |                     +------ QPRAND
   |	   |          |
   |	   |          |
   |	   |          +------ QPANNH
   |       |
   |       +------ QPSET
   |       |          |
   |       |          +------ QPBSFL 
   |       |                     |
   |       |                     +----- QPBOST
   |       |
   |       |
   |       +------- (QPDUMP : Dump all particle information)
   |       |
   \---<---+
           |


(README end)
